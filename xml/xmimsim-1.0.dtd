<!--
Copyright (C) 2010-2011 Tom Schoonjans and Laszlo Vincze

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see http://www.gnu.org/licenses/.
-->
<!ELEMENT xmimsim-input (general, composition , geometry, excitation, absorbers, detector)>
<!-- Next line is for backwards compatibility only -->
<!ELEMENT xmimsim (general, composition , geometry, excitation, absorbers, detector)>

<!ELEMENT general (outputfile, n_photons_interval,n_photons_line,n_interactions_trajectory, comments)>
<!ATTLIST general version CDATA #REQUIRED>
<!ELEMENT outputfile (#PCDATA)>
<!ELEMENT n_photons_interval (#PCDATA)>
<!ELEMENT n_photons_line (#PCDATA)>
<!ELEMENT n_interactions_trajectory (#PCDATA)>
<!ELEMENT comments (#PCDATA)>

<!ELEMENT composition (layer+, reference_layer)>
<!ELEMENT reference_layer (#PCDATA)>
<!ELEMENT layer (element+,density,thickness)>
<!ELEMENT element (atomic_number,weight_fraction)>
<!ELEMENT atomic_number (#PCDATA)>
<!ELEMENT weight_fraction (#PCDATA)>
<!ELEMENT density (#PCDATA)>
<!ELEMENT thickness (#PCDATA)>

<!ELEMENT geometry (d_sample_source, n_sample_orientation, p_detector_window, n_detector_orientation, area_detector, collimator_height, collimator_diameter, d_source_slit, slit_size)>
<!ELEMENT d_sample_source (#PCDATA)>
<!ELEMENT n_sample_orientation (x,y,z)>
<!ELEMENT p_detector_window (x,y,z)>
<!ELEMENT n_detector_orientation (x,y,z)>
<!ELEMENT area_detector (#PCDATA)>
<!--<!ELEMENT acceptance_detector (#PCDATA)>-->
<!ELEMENT collimator_height (#PCDATA)>
<!ELEMENT collimator_diameter (#PCDATA)>
<!ELEMENT d_source_slit (#PCDATA)>
<!ELEMENT slit_size (slit_size_x,slit_size_y)>
<!ELEMENT x (#PCDATA)>
<!ELEMENT y (#PCDATA)>
<!ELEMENT z (#PCDATA)>
<!ELEMENT sigma_x (#PCDATA)>
<!ELEMENT sigma_xp (#PCDATA)>
<!ELEMENT sigma_y (#PCDATA)>
<!ELEMENT sigma_yp (#PCDATA)>
<!ELEMENT slit_size_x (#PCDATA)>
<!ELEMENT slit_size_y (#PCDATA)>

<!ELEMENT excitation (discrete*,continuous*)>
<!ELEMENT discrete (energy, horizontal_intensity,vertical_intensity,sigma_x,sigma_xp,sigma_y, sigma_yp, scale_parameter?)>
<!ELEMENT continuous (energy, horizontal_intensity,vertical_intensity,sigma_x,sigma_xp,sigma_y, sigma_yp)>
<!ELEMENT energy (#PCDATA)>
<!ELEMENT horizontal_intensity (#PCDATA)>
<!ELEMENT vertical_intensity (#PCDATA)>
<!ELEMENT scale_parameter (#PCDATA)>
<!ATTLIST scale_parameter distribution_type (monochromatic|gaussian|lorentzian) #IMPLIED>


<!ELEMENT absorbers (excitation_path?,detector_path?)>
<!ELEMENT excitation_path (layer+)>
<!ELEMENT detector_path (layer+)>

<!ELEMENT detector (detector_type,live_time,pulse_width,nchannels?,gain,zero,fano,noise,max_convolution_energy?,crystal)>
<!ELEMENT detector_type (#PCDATA)>
<!ELEMENT gain (#PCDATA)>
<!ELEMENT live_time (#PCDATA)>
<!ELEMENT pulse_width (#PCDATA)>
<!ELEMENT nchannels (#PCDATA)>
<!ELEMENT zero (#PCDATA)>
<!ELEMENT fano (#PCDATA)>
<!ELEMENT noise (#PCDATA)>
<!ELEMENT max_convolution_energy (#PCDATA)>
<!ELEMENT crystal (layer+)>

<!-- outputfile structure -->


<!ELEMENT xmimsim-results (inputfile, spectrum_conv, spectrum_unconv ,brute_force_history, variance_reduction_history, xmimsim-input, svg_graphs?)>
<!ATTLIST xmimsim-results version CDATA #REQUIRED>
<!ATTLIST xmimsim-results step1 CDATA #IMPLIED>
<!ATTLIST xmimsim-results step2 CDATA #IMPLIED>
<!ATTLIST xmimsim-results step3 CDATA #IMPLIED>
<!ATTLIST xmimsim-results step4 CDATA #IMPLIED>
<!ELEMENT inputfile (#PCDATA)>
<!ELEMENT spectrum_conv (channel+)>
<!ELEMENT spectrum_unconv (channel+)>
<!ELEMENT channel (channelnr,energy,counts+)>
<!ELEMENT counts (#PCDATA)>
<!ATTLIST counts interaction_number CDATA #REQUIRED>
<!ELEMENT channelnr (#PCDATA)>
<!ELEMENT brute_force_history (fluorescence_line_counts*)>
<!ELEMENT variance_reduction_history (fluorescence_line_counts*)>
<!ELEMENT fluorescence_line_counts (fluorescence_line+)>
<!ATTLIST fluorescence_line_counts atomic_number CDATA #REQUIRED>
<!ATTLIST fluorescence_line_counts symbol CDATA #REQUIRED>
<!ATTLIST fluorescence_line_counts total_counts CDATA #REQUIRED>
<!ELEMENT fluorescence_line (counts+)>
<!ATTLIST fluorescence_line type CDATA #REQUIRED>
<!ATTLIST fluorescence_line energy CDATA #REQUIRED>
<!ATTLIST fluorescence_line total_counts CDATA #REQUIRED>


<!-- svg stuff...  -->
<!ELEMENT svg_graphs (graphic*)>
<!ELEMENT graphic (id+, rect?, points?)>
<!ELEMENT id (name+, interaction+)>
<!ELEMENT rect (view?, size+, x-axis?, y-axis?)>
<!ELEMENT view (width?, height?)>
<!ELEMENT size (width?, height?,min_energy?,max_energy?)>
<!ELEMENT x-axis (name?, index*)>
<!ELEMENT y-axis (name?, index*)>
<!ELEMENT index (value?, name?)>
<!ELEMENT points (color,point*)>
<!ELEMENT point (x?,y?)>
<!ELEMENT name (#PCDATA)>
<!ELEMENT interaction (#PCDATA)>
<!ELEMENT width (#PCDATA)>
<!ELEMENT height (#PCDATA)>
<!ELEMENT min_energy (#PCDATA)>
<!ELEMENT max_energy (#PCDATA)>
<!ELEMENT value (#PCDATA)>
<!ELEMENT color (#PCDATA)>

<!-- archive -->
<!ELEMENT xmimsim-archive (start_value1, end_value1, nsteps1, xpath1, start_value2?, end_value2?, nsteps2?, xpath2?, start_value3?, end_value3?, nsteps3?, xpath3?, start_value4?, end_value4?, nsteps4?, xpath4?, xmimsim-results+)>
<!-- version attribute was added only quite late so it is optional -->
<!ATTLIST xmimsim-archive version CDATA #IMPLIED>
<!ELEMENT start_value1 (#PCDATA)>
<!ELEMENT end_value1 (#PCDATA)>
<!ELEMENT nsteps1 (#PCDATA)>
<!ELEMENT xpath1 (#PCDATA)>
<!ELEMENT start_value2 (#PCDATA)>
<!ELEMENT end_value2 (#PCDATA)>
<!ELEMENT nsteps2 (#PCDATA)>
<!ELEMENT xpath2 (#PCDATA)>
